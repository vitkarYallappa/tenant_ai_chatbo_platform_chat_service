[build-system]
requires = ["setuptools>=61.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "chat-service"
version = "2.0.0"
description = "Multi-tenant AI chatbot platform - Chat Service"
authors = [{name = "Development Team", email = "dev@company.com"}]
license = {text = "MIT"}
readme = "README.md"
requires-python = ">=3.11"
keywords = ["chatbot", "ai", "multi-tenant", "fastapi", "microservice"]
classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12",
    "Framework :: FastAPI",
    "Topic :: Communications :: Chat",
    "Topic :: Internet :: WWW/HTTP :: HTTP Servers",
    "Topic :: Software Development :: Libraries :: Python Modules",
]

dependencies = [
    "fastapi>=0.104.0,<0.105.0",
    "uvicorn[standard]>=0.24.0,<0.25.0",
    "pydantic>=2.4.0,<3.0.0",
    "pydantic-settings>=2.0.0,<3.0.0",

    # Database drivers
    "motor>=3.3.0,<4.0.0",  # MongoDB async driver
    "redis>=5.0.0,<6.0.0",
    "asyncpg>=0.28.0,<0.29.0",  # PostgreSQL async driver

    # Message queue
    "kafka-python>=2.0.2,<3.0.0",

    # gRPC communication
    "grpcio>=1.59.0,<1.60.0",
    "grpcio-tools>=1.59.0,<1.60.0",
    "grpcio-status>=1.59.0,<1.60.0",

    # Security and authentication
    "python-jose[cryptography]>=3.3.0,<4.0.0",
    "passlib[bcrypt]>=1.7.4,<2.0.0",
    "cryptography>=41.0.0,<42.0.0",

    # HTTP client
    "httpx>=0.25.0,<0.26.0",
    "aiofiles>=23.2.0,<24.0.0",

    # Monitoring and observability
    "prometheus-client>=0.18.0,<0.19.0",
    "opentelemetry-api>=1.20.0,<1.21.0",
    "opentelemetry-sdk>=1.20.0,<1.21.0",
    "opentelemetry-instrumentation-fastapi>=0.41b0,<0.42.0",
    "opentelemetry-exporter-jaeger>=1.20.0,<1.21.0",

    # Logging
    "structlog>=23.2.0,<24.0.0",
    "python-json-logger>=2.0.7,<3.0.0",

    # Utilities
    "python-multipart>=0.0.6,<0.1.0",  # For file uploads
    "email-validator>=2.1.0,<3.0.0",
    "phonenumbers>=8.13.0,<9.0.0",
    "python-dateutil>=2.8.2,<3.0.0",
    "pytz>=2023.3",
    "pycountry>=22.3.0,<23.0.0",

    # Data validation and processing
    "validators>=0.22.0,<0.23.0",
    "bleach>=6.1.0,<7.0.0",  # HTML sanitization
    "markupsafe>=2.1.3,<3.0.0",

    # Configuration management
    "python-dotenv>=1.0.0,<2.0.0",
    "pyyaml>=6.0.1,<7.0.0",

    # Async utilities
    "anyio>=3.7.1,<4.0.0",
    "tenacity>=8.2.3,<9.0.0",  # Retry logic

    #JWT
    "PyJWT>=2.8.0,<3.0.0",
]

[project.optional-dependencies]
dev = [
    # Testing
    "pytest>=7.4.0,<8.0.0",
    "pytest-asyncio>=0.21.0,<0.22.0",
    "pytest-cov>=4.1.0,<5.0.0",
    "pytest-mock>=3.11.1,<4.0.0",
    "pytest-xdist>=3.3.1,<4.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
    "pytest-benchmark>=4.0.0,<5.0.0",
    "factory-boy>=3.3.0,<4.0.0",
    "faker>=19.6.2,<20.0.0",
    "freezegun>=1.2.2,<2.0.0",

    # Code quality
    "black>=23.9.1,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.1.0,<7.0.0",
    "flake8-bugbear>=23.9.16,<24.0.0",
    "flake8-comprehensions>=3.14.0,<4.0.0",
    "flake8-simplify>=0.20.0,<1.0.0",
    "mypy>=1.6.0,<2.0.0",
    "bandit>=1.7.5,<2.0.0",
    "safety>=2.3.5,<3.0.0",

    # Documentation
    "sphinx>=7.2.6,<8.0.0",
    "sphinx-rtd-theme>=1.3.0,<2.0.0",
    "myst-parser>=2.0.0,<3.0.0",

    # Development tools
    "pre-commit>=3.5.0,<4.0.0",
    "ipython>=8.16.1,<9.0.0",
    "ipdb>=0.13.13,<1.0.0",
    "rich>=13.6.0,<14.0.0",

    # Performance testing
    "locust>=2.17.0,<3.0.0",

    # Type stubs
    "types-redis>=4.6.0.5,<5.0.0",
    "types-requests>=2.31.0.8,<3.0.0",
    "types-PyYAML>=6.0.12.12,<7.0.0",
    "types-python-dateutil>=2.8.19.14,<3.0.0",
    "types-pytz>=2023.3.1.1,<2024.0.0",
]

production = [
    # Production-specific dependencies
    "gunicorn>=21.2.0,<22.0.0",
    "uvloop>=0.18.0,<0.19.0",  # High performance event loop
    "orjson>=3.9.9,<4.0.0",  # Fast JSON serialization
]

[project.urls]
Homepage = "https://github.com/company/chatbot-platform"
Documentation = "https://docs.chatbot-platform.com"
Repository = "https://github.com/company/chatbot-platform.git"
Issues = "https://github.com/company/chatbot-platform/issues"

[project.scripts]
chat-service = "src.main:main"

[tool.setuptools.packages.find]
where = ["src"]
include = ["src*"]

[tool.setuptools.package-data]
"*" = ["*.yaml", "*.yml", "*.json", "*.toml", "*.txt", "*.md"]

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["src"]
known_third_party = ["fastapi", "pydantic", "motor", "redis"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

[tool.mypy]
python_version = "3.11"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true
show_error_codes = true

[[tool.mypy.overrides]]
module = [
    "kafka.*",
    "motor.*",
    "grpcio.*",
    "prometheus_client.*",
]
ignore_missing_imports = true

[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py", "*_test.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--strict-markers",
    "--strict-config",
    "--cov=src",
    "--cov-report=html:htmlcov",
    "--cov-report=xml:coverage.xml",
    "--cov-report=term-missing",
    "--cov-fail-under=80",
    "--no-cov-on-fail",
    "-ra",
    "--tb=short",
]
filterwarnings = [
    "error",
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
    "ignore::PendingDeprecationWarning",
]
asyncio_mode = "auto"
timeout = 300
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')",
    "integration: marks tests as integration tests",
    "e2e: marks tests as end-to-end tests",
    "unit: marks tests as unit tests",
    "performance: marks tests as performance tests",
]

[tool.coverage.run]
source = ["src"]
branch = true
omit = [
    "*/tests/*",
    "*/venv/*",
    "*/__pycache__/*",
    "*/migrations/*",
    "*/scripts/*",
]

[tool.coverage.report]
precision = 2
show_missing = true
skip_covered = false
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self\\.debug:",
    "if settings\\.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "class .*\\bProtocol\\):",
    "@(abc\\.)?abstractmethod",
]

[tool.bandit]
exclude_dirs = ["tests", "venv", ".venv"]
tests = ["B201", "B301", "B318", "B502", "B506", "B701"]
skips = ["B101", "B601"]

[tool.bandit.assert_used]
skips = ["*_test.py", "*/test_*.py"]